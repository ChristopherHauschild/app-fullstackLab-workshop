{"ast":null,"code":"var _jsxFileName = \"D:\\\\Dados\\\\Documents\\\\Christopher\\\\FullstackLab\\\\mydailystatus\\\\pages\\\\app.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport auth0 from '../lib/auth0';\nimport router from 'next/router';\nimport { db } from '../lib/db';\n\nconst App = props => {\n  useEffect(() => {\n    if (!props.isAuth) {\n      router.push('/');\n    } else if (props.forceCreate) {\n      router.push('/create-status');\n    }\n  });\n\n  if (!props.isAuth || props.forceCreate) {\n    return null;\n  }\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, \"App\"), __jsx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, JSON.stringify(props, null, 2)));\n};\n\nexport default App;\nexport async function getServerSideProps({\n  req,\n  res\n}) {\n  const session = await auth0.getSession(req);\n\n  if (session) {\n    const today = new Date();\n    const currentDate = today.getFullYear() + '-' + today.getMonth() + '-' + today.getDate();\n    const todaysCheckin = await db.collection('markers').doc(currentDate).collection('checks').doc(session.user.sub).get();\n    const todaysData = todaysCheckin.data();\n    let forceCreate = true;\n\n    if (todaysData) {\n      forceCreate = false;\n      const checkins = db.collection('markers').doc(currentDate).collection('checks').near({\n        center: todaysData.coordinates,\n        radius: 1000\n      });\n      console.log(checkins);\n    }\n\n    return {\n      props: {\n        isAuth: true,\n        user: session.user,\n        forceCreate\n      }\n    };\n  }\n\n  return {\n    props: {\n      isAuth: false,\n      user: {}\n    }\n  };\n}","map":{"version":3,"sources":["D:/Dados/Documents/Christopher/FullstackLab/mydailystatus/pages/app.js"],"names":["React","useEffect","auth0","router","db","App","props","isAuth","push","forceCreate","JSON","stringify","getServerSideProps","req","res","session","getSession","today","Date","currentDate","getFullYear","getMonth","getDate","todaysCheckin","collection","doc","user","sub","get","todaysData","data","checkins","near","center","coordinates","radius","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,EAAT,QAAmB,WAAnB;;AAEA,MAAMC,GAAG,GAAIC,KAAD,IAAW;AACnBL,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACK,KAAK,CAACC,MAAX,EAAmB;AACfJ,MAAAA,MAAM,CAACK,IAAP,CAAY,GAAZ;AACH,KAFD,MAEO,IAAGF,KAAK,CAACG,WAAT,EAAqB;AACxBN,MAAAA,MAAM,CAACK,IAAP,CAAY,gBAAZ;AACH;AACJ,GANQ,CAAT;;AAOA,MAAI,CAACF,KAAK,CAACC,MAAP,IAAiBD,KAAK,CAACG,WAA3B,EAAwC;AACpC,WAAO,IAAP;AACH;;AACD,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMC,IAAI,CAACC,SAAL,CAAeL,KAAf,EAAsB,IAAtB,EAA4B,CAA5B,CAAN,CAFJ,CADJ;AAMH,CAjBD;;AAmBA,eAAeD,GAAf;AAEA,OAAO,eAAeO,kBAAf,CAAkC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA;AAAP,CAAlC,EAAgD;AACnD,QAAMC,OAAO,GAAG,MAAMb,KAAK,CAACc,UAAN,CAAiBH,GAAjB,CAAtB;;AACA,MAAIE,OAAJ,EAAa;AACT,UAAME,KAAK,GAAG,IAAIC,IAAJ,EAAd;AACA,UAAMC,WAAW,GACjBF,KAAK,CAACG,WAAN,KAAsB,GAAtB,GAA4BH,KAAK,CAACI,QAAN,EAA5B,GAA+C,GAA/C,GAAqDJ,KAAK,CAACK,OAAN,EADrD;AAEA,UAAMC,aAAa,GAAG,MAAMnB,EAAE,CACzBoB,UADuB,CACZ,SADY,EAEvBC,GAFuB,CAEnBN,WAFmB,EAGvBK,UAHuB,CAGZ,QAHY,EAIvBC,GAJuB,CAInBV,OAAO,CAACW,IAAR,CAAaC,GAJM,EAKvBC,GALuB,EAA5B;AAOA,UAAMC,UAAU,GAAGN,aAAa,CAACO,IAAd,EAAnB;AACA,QAAIrB,WAAW,GAAG,IAAlB;;AAEA,QAAIoB,UAAJ,EAAgB;AACZpB,MAAAA,WAAW,GAAG,KAAd;AACA,YAAMsB,QAAQ,GAAG3B,EAAE,CAACoB,UAAH,CAAc,SAAd,EAChBC,GADgB,CACZN,WADY,EAEhBK,UAFgB,CAEL,QAFK,EAGhBQ,IAHgB,CAGX;AACFC,QAAAA,MAAM,EAAEJ,UAAU,CAACK,WADjB;AAEFC,QAAAA,MAAM,EAAE;AAFN,OAHW,CAAjB;AAOAC,MAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AACH;;AAED,WAAO;AACHzB,MAAAA,KAAK,EAAE;AACHC,QAAAA,MAAM,EAAE,IADL;AAEHmB,QAAAA,IAAI,EAAEX,OAAO,CAACW,IAFX;AAGHjB,QAAAA;AAHG;AADJ,KAAP;AAOH;;AACD,SAAO;AACHH,IAAAA,KAAK,EAAE;AACHC,MAAAA,MAAM,EAAE,KADL;AAEHmB,MAAAA,IAAI,EAAE;AAFH;AADJ,GAAP;AAMH","sourcesContent":["import React, { useEffect } from 'react'\r\nimport auth0 from '../lib/auth0'\r\nimport router from 'next/router'\r\nimport { db } from '../lib/db'\r\n\r\nconst App = (props) => {\r\n    useEffect(() => {\r\n        if (!props.isAuth) {\r\n            router.push('/')\r\n        } else if(props.forceCreate){\r\n            router.push('/create-status')\r\n        }\r\n    })\r\n    if (!props.isAuth || props.forceCreate) {\r\n        return null\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>App</h1>\r\n            <pre>{JSON.stringify(props, null, 2)}</pre>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n\r\nexport async function getServerSideProps({ req, res }) {\r\n    const session = await auth0.getSession(req)\r\n    if (session) {\r\n        const today = new Date()\r\n        const currentDate = \r\n        today.getFullYear() + '-' + today.getMonth() + '-' + today.getDate()\r\n        const todaysCheckin = await db\r\n            .collection('markers')\r\n            .doc(currentDate)\r\n            .collection('checks')\r\n            .doc(session.user.sub)\r\n            .get()\r\n\r\n        const todaysData = todaysCheckin.data()\r\n        let forceCreate = true\r\n\r\n        if (todaysData) {\r\n            forceCreate = false\r\n            const checkins = db.collection('markers')\r\n            .doc(currentDate)\r\n            .collection('checks')\r\n            .near({\r\n                center: todaysData.coordinates,\r\n                radius: 1000\r\n            })\r\n            console.log(checkins)\r\n        }\r\n\r\n        return {\r\n            props: {\r\n                isAuth: true,\r\n                user: session.user,\r\n                forceCreate\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        props: {\r\n            isAuth: false,\r\n            user: {}\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}