{"ast":null,"code":"var _jsxFileName = \"D:\\\\Dados\\\\Documents\\\\Christopher\\\\FullstackLab\\\\mydailystatus\\\\pages\\\\app.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport auth0 from '../lib/auth0';\nimport router from 'next/router';\nimport { db } from '../lib/db';\nimport { distance } from '../lib/geo';\n\nconst App = props => {\n  useEffect(() => {\n    if (!props.isAuth) {\n      router.push('/');\n    } else if (props.forceCreate) {\n      router.push('/create-status');\n    }\n  });\n\n  if (!props.isAuth || props.forceCreate) {\n    return null;\n  }\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    className: \"font-sans text-xl font-semibold text-black text-center my-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, \"Status pr\\xF3ximos a voc\\xEA\"), __jsx(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, props.checkins.map(checkin => {\n    return __jsx(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 29\n      }\n    }, __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 33\n      }\n    }, checkin.id === props.user.sub && 'Seu status'), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 33\n      }\n    }, checkin.status), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 33\n      }\n    }, JSON.stringify(checkin.coords)), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 33\n      }\n    }, checkin.distance));\n  })));\n};\n\nexport default App;\nexport async function getServerSideProps({\n  req,\n  res\n}) {\n  const session = await auth0.getSession(req);\n\n  if (session) {\n    const today = new Date();\n    const currentDate = today.getFullYear() + '-' + today.getMonth() + '-' + today.getDate();\n    const todaysCheckin = await db.collection('markers').doc(currentDate).collection('checks').doc(session.user.sub).get();\n    const todaysData = todaysCheckin.data();\n    let forceCreate = true;\n\n    if (todaysData) {\n      forceCreate = false;\n      const checkins = await db.collection('markers').doc(currentDate).collection('checks').near({\n        center: todaysData.coordinates,\n        radius: 1000\n      }).get();\n      const checkinsList = [];\n      checkins.docs.forEach(doc => {\n        checkinsList.push({\n          id: doc.id,\n          status: doc.data().status,\n          coords: {\n            lat: doc.data().coordinates.latitude,\n            long: doc.data().coordinates.longitude\n          },\n          distance: distance(todaysData.coordinates.latitude, todaysData.coordinates.longitude, doc.data().coordinates.latitude, doc.data().coordinates.longitude).toFixed(2)\n        });\n      });\n      return {\n        props: {\n          isAuth: true,\n          user: session.user,\n          forceCreate: false,\n          checkins: checkinsList\n        }\n      };\n    }\n\n    return {\n      props: {\n        isAuth: true,\n        user: session.user,\n        forceCreate\n      }\n    };\n  }\n\n  return {\n    props: {\n      isAuth: false,\n      user: {}\n    }\n  };\n}\n\nconst AnyReactComponent = ({\n  text\n}) => __jsx(\"div\", {\n  style: {\n    color: 'white',\n    background: 'grey',\n    padding: '15px 10px',\n    display: 'inline-flex',\n    textAlign: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: '100%',\n    transform: 'translate(-50%, -50%)'\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }\n}, text);\n\nclass SimpleMap extends React.Component {\n  render() {\n    return __jsx(GoogleMapReact, {\n      defaultCenter: this.props.center,\n      defaultZoom: this.props.zoom,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 10\n      }\n    }, __jsx(AnyReactComponent, {\n      lat: 59.955413,\n      lng: 30.337844,\n      text: 'Kreyser Avrora',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\n_defineProperty(SimpleMap, \"defaultProps\", {\n  center: {\n    lat: 59.95,\n    lng: 30.33\n  },\n  zoom: 11\n});","map":{"version":3,"sources":["D:/Dados/Documents/Christopher/FullstackLab/mydailystatus/pages/app.js"],"names":["React","useEffect","GoogleMapReact","auth0","router","db","distance","App","props","isAuth","push","forceCreate","checkins","map","checkin","id","user","sub","status","JSON","stringify","coords","getServerSideProps","req","res","session","getSession","today","Date","currentDate","getFullYear","getMonth","getDate","todaysCheckin","collection","doc","get","todaysData","data","near","center","coordinates","radius","checkinsList","docs","forEach","lat","latitude","long","longitude","toFixed","AnyReactComponent","text","color","background","padding","display","textAlign","alignItems","justifyContent","borderRadius","transform","SimpleMap","Component","render","zoom","lng"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\r\nimport GoogleMapReact  from  'google-map-react';\r\nimport auth0 from '../lib/auth0'\r\nimport router from 'next/router'\r\nimport { db } from '../lib/db'\r\nimport { distance } from '../lib/geo'\r\n\r\n\r\nconst App = (props) => {\r\n    useEffect(() => {\r\n        if (!props.isAuth) {\r\n            router.push('/')\r\n        } else if (props.forceCreate) {\r\n            router.push('/create-status')\r\n        }\r\n    })\r\n    if (!props.isAuth || props.forceCreate) {\r\n        return null\r\n    }\r\n    return (\r\n        <div>\r\n            <h1 className='font-sans text-xl font-semibold text-black text-center my-12'>\r\n            Status próximos a você</h1>\r\n            <table>\r\n                {\r\n                    props.checkins.map(checkin => {\r\n                        return (\r\n                            <tr>\r\n                                <td>{checkin.id === props.user.sub && 'Seu status'}</td>\r\n                                <td>{checkin.status}</td>\r\n                                <td>{JSON.stringify(checkin.coords)}</td>\r\n                                <td>{checkin.distance}</td>\r\n                            </tr>\r\n                        )\r\n                    })\r\n                }\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n\r\nexport async function getServerSideProps({ req, res }) {\r\n    const session = await auth0.getSession(req)\r\n    if (session) {\r\n        const today = new Date()\r\n        const currentDate =\r\n            today.getFullYear() + '-' + today.getMonth() + '-' + today.getDate()\r\n        const todaysCheckin = await db\r\n            .collection('markers')\r\n            .doc(currentDate)\r\n            .collection('checks')\r\n            .doc(session.user.sub)\r\n            .get()\r\n\r\n        const todaysData = todaysCheckin.data()\r\n        let forceCreate = true\r\n\r\n        if (todaysData) {\r\n            forceCreate = false\r\n            const checkins = await db.collection('markers')\r\n                .doc(currentDate)\r\n                .collection('checks')\r\n                .near({\r\n                    center: todaysData.coordinates,\r\n                    radius: 1000\r\n                })\r\n                .get()\r\n            const checkinsList = []\r\n            checkins.docs.forEach(doc => {\r\n                checkinsList.push({\r\n                    id: doc.id,\r\n                    status: doc.data().status,\r\n                    coords: {\r\n                        lat: doc.data().coordinates.latitude,\r\n                        long: doc.data().coordinates.longitude\r\n                    },\r\n                    distance: distance(\r\n                        todaysData.coordinates.latitude,\r\n                        todaysData.coordinates.longitude,\r\n                        doc.data().coordinates.latitude,\r\n                        doc.data().coordinates.longitude\r\n                    ).toFixed(2)\r\n                })\r\n            })\r\n            return {\r\n                props: {\r\n                    isAuth: true,\r\n                    user: session.user,\r\n                    forceCreate: false,\r\n                    checkins: checkinsList\r\n                }\r\n            }\r\n        }\r\n\r\n        return {\r\n            props: {\r\n                isAuth: true,\r\n                user: session.user,\r\n                forceCreate\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        props: {\r\n            isAuth: false,\r\n            user: {}\r\n        }\r\n    }\r\n}\r\n\r\nconst AnyReactComponent = ({ text }) => (\r\n    <div style={{\r\n      color: 'white', \r\n      background: 'grey',\r\n      padding: '15px 10px',\r\n      display: 'inline-flex',\r\n      textAlign: 'center',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      borderRadius: '100%',\r\n      transform: 'translate(-50%, -50%)'\r\n    }}>\r\n      {text}\r\n    </div>\r\n  );\r\n  \r\n  class SimpleMap extends React.Component {\r\n    static defaultProps = {\r\n      center: {lat: 59.95, lng: 30.33},\r\n      zoom: 11\r\n    };\r\n  \r\n    render() {\r\n      return (\r\n         <GoogleMapReact\r\n          defaultCenter={this.props.center}\r\n          defaultZoom={this.props.zoom}\r\n        >\r\n          <AnyReactComponent \r\n            lat={59.955413} \r\n            lng={30.337844} \r\n            text={'Kreyser Avrora'} \r\n          />\r\n        </GoogleMapReact>\r\n      );\r\n    }\r\n  }"]},"metadata":{},"sourceType":"module"}