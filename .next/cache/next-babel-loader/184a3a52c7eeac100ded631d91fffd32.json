{"ast":null,"code":"export var GoogleApi = function GoogleApi(opts) {\n  opts = opts || {};\n\n  if (!opts.hasOwnProperty('apiKey')) {\n    throw new Error('You must pass an apiKey to use GoogleApi');\n  }\n\n  var apiKey = opts.apiKey;\n  var libraries = opts.libraries || ['places'];\n  var client = opts.client;\n  var URL = opts.url || 'https://maps.googleapis.com/maps/api/js';\n  var googleVersion = opts.version || '3.31';\n  var script = null;\n  var google = true && window.google || null;\n  var loading = false;\n  var channel = null;\n  var language = opts.language;\n  var region = opts.region || null;\n  var onLoadEvents = [];\n\n  var url = function url() {\n    var url = URL;\n    var params = {\n      key: apiKey,\n      callback: 'CALLBACK_NAME',\n      libraries: libraries.join(','),\n      client: client,\n      v: googleVersion,\n      channel: channel,\n      language: language,\n      region: region,\n      onerror: 'ERROR_FUNCTION'\n    };\n    var paramStr = Object.keys(params).filter(function (k) {\n      return !!params[k];\n    }).map(function (k) {\n      return \"\".concat(k, \"=\").concat(params[k]);\n    }).join('&');\n    return \"\".concat(url, \"?\").concat(paramStr);\n  };\n\n  return url();\n};\nexport default GoogleApi;","map":{"version":3,"sources":["D:/Dados/Documents/Christopher/FullstackLab/mydailystatus/lib/GoogleApi.js"],"names":["GoogleApi","opts","hasOwnProperty","Error","apiKey","libraries","client","URL","url","googleVersion","version","script","google","window","loading","channel","language","region","onLoadEvents","params","key","callback","join","v","onerror","paramStr","Object","keys","filter","k","map"],"mappings":"AAAA,OAAO,IAAMA,SAAS,GAAG,SAAZA,SAAY,CAASC,IAAT,EAAe;AACpCA,EAAAA,IAAI,GAAGA,IAAI,IAAI,EAAf;;AAEA,MAAI,CAACA,IAAI,CAACC,cAAL,CAAoB,QAApB,CAAL,EAAoC;AAClC,UAAM,IAAIC,KAAJ,CAAU,0CAAV,CAAN;AACD;;AAED,MAAMC,MAAM,GAAGH,IAAI,CAACG,MAApB;AACA,MAAMC,SAAS,GAAGJ,IAAI,CAACI,SAAL,IAAkB,CAAC,QAAD,CAApC;AACA,MAAMC,MAAM,GAAGL,IAAI,CAACK,MAApB;AACA,MAAMC,GAAG,GAAGN,IAAI,CAACO,GAAL,IAAY,yCAAxB;AAEA,MAAMC,aAAa,GAAGR,IAAI,CAACS,OAAL,IAAgB,MAAtC;AAEA,MAAIC,MAAM,GAAG,IAAb;AACA,MAAIC,MAAM,GAAI,QAAiCC,MAAM,CAACD,MAAzC,IAAoD,IAAjE;AACA,MAAIE,OAAO,GAAG,KAAd;AACA,MAAIC,OAAO,GAAG,IAAd;AACA,MAAIC,QAAQ,GAAGf,IAAI,CAACe,QAApB;AACA,MAAIC,MAAM,GAAGhB,IAAI,CAACgB,MAAL,IAAe,IAA5B;AAEA,MAAIC,YAAY,GAAG,EAAnB;;AAEA,MAAMV,GAAG,GAAG,eAAM;AAChB,QAAIA,GAAG,GAAGD,GAAV;AACA,QAAIY,MAAM,GAAG;AACXC,MAAAA,GAAG,EAAEhB,MADM;AAEXiB,MAAAA,QAAQ,EAAE,eAFC;AAGXhB,MAAAA,SAAS,EAAEA,SAAS,CAACiB,IAAV,CAAe,GAAf,CAHA;AAIXhB,MAAAA,MAAM,EAAEA,MAJG;AAKXiB,MAAAA,CAAC,EAAEd,aALQ;AAMXM,MAAAA,OAAO,EAAEA,OANE;AAOXC,MAAAA,QAAQ,EAAEA,QAPC;AAQXC,MAAAA,MAAM,EAAEA,MARG;AASXO,MAAAA,OAAO,EAAE;AATE,KAAb;AAYA,QAAIC,QAAQ,GAAGC,MAAM,CAACC,IAAP,CAAYR,MAAZ,EACZS,MADY,CACL,UAAAC,CAAC;AAAA,aAAI,CAAC,CAACV,MAAM,CAACU,CAAD,CAAZ;AAAA,KADI,EAEZC,GAFY,CAER,UAAAD,CAAC;AAAA,uBAAOA,CAAP,cAAYV,MAAM,CAACU,CAAD,CAAlB;AAAA,KAFO,EAGZP,IAHY,CAGP,GAHO,CAAf;AAKA,qBAAUd,GAAV,cAAiBiB,QAAjB;AACD,GApBD;;AAsBA,SAAOjB,GAAG,EAAV;AACD,CA9CI;AAgDL,eAAeR,SAAf","sourcesContent":["export const GoogleApi = function(opts) {\r\n    opts = opts || {};\r\n  \r\n    if (!opts.hasOwnProperty('apiKey')) {\r\n      throw new Error('You must pass an apiKey to use GoogleApi');\r\n    }\r\n  \r\n    const apiKey = opts.apiKey;\r\n    const libraries = opts.libraries || ['places'];\r\n    const client = opts.client;\r\n    const URL = opts.url || 'https://maps.googleapis.com/maps/api/js';\r\n  \r\n    const googleVersion = opts.version || '3.31';\r\n  \r\n    let script = null;\r\n    let google = (typeof window !== 'undefined' && window.google) || null;\r\n    let loading = false;\r\n    let channel = null;\r\n    let language = opts.language;\r\n    let region = opts.region || null;\r\n  \r\n    let onLoadEvents = [];\r\n  \r\n    const url = () => {\r\n      let url = URL;\r\n      let params = {\r\n        key: apiKey,\r\n        callback: 'CALLBACK_NAME',\r\n        libraries: libraries.join(','),\r\n        client: client,\r\n        v: googleVersion,\r\n        channel: channel,\r\n        language: language,\r\n        region: region,\r\n        onerror: 'ERROR_FUNCTION'\r\n      };\r\n  \r\n      let paramStr = Object.keys(params)\r\n        .filter(k => !!params[k])\r\n        .map(k => `${k}=${params[k]}`)\r\n        .join('&');\r\n  \r\n      return `${url}?${paramStr}`;\r\n    };\r\n  \r\n    return url();\r\n  };\r\n  \r\n  export default GoogleApi;"]},"metadata":{},"sourceType":"module"}